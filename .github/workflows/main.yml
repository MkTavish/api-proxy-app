name: Deploy image to Amazon ECR

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  docker:
    name: Build proxy container image
    runs-on: ubuntu-latest
    container: docker:19.03.5

    services:
      docker:
        image: docker:19.03.5-dind

    steps:
    - name: Build
      uses: actions/checkout@v2
      run: |
        mkdir data/
        docker build --compress -t proxy .
        docker save --output data/image.tar proxy
    - name: artifacts
      uses: actions/upload-artifact@v2
      with:
        name: image
        path: data/

        
  ecr:
    name: Deploy image to AWS ECR
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        apk add python3
        pip3 install awscli==1.18.8
        docker load --input data/image.tar
        docker tag proxy:latest $ECR_REPO:dev
        docker push $ECR_REPO:dev
        echo "::set-output name=image::$ECR_REPO:dev"